// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StrongholdsAPI.Data;

#nullable disable

namespace StrongholdsAPI.Migrations
{
    [DbContext(typeof(StrongholdsContext))]
    [Migration("20220212024024_robotToMission")]
    partial class robotToMission
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("StrongholdsUtil.Models.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("latitude")
                        .HasColumnType("real");

                    b.Property<float>("longitude")
                        .HasColumnType("real");

                    b.HasKey("LocationID");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("StrongholdsUtil.Models.Login", b =>
                {
                    b.Property<int>("LoginID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoginID"), 1L, 1);

                    b.Property<string>("HashedToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoginID");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("StrongholdsUtil.Models.Mission", b =>
                {
                    b.Property<int>("MissionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MissionID"), 1L, 1);

                    b.Property<int>("RobotID")
                        .HasColumnType("int");

                    b.HasKey("MissionID");

                    b.HasIndex("RobotID")
                        .IsUnique();

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("StrongholdsUtil.Models.Objective", b =>
                {
                    b.Property<int>("ObjectiveID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObjectiveID"), 1L, 1);

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<float>("Latitude")
                        .HasColumnType("real");

                    b.Property<float>("Longitude")
                        .HasColumnType("real");

                    b.Property<int>("MissionID")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("ObjectiveID");

                    b.HasIndex("MissionID");

                    b.ToTable("Objectives");
                });

            modelBuilder.Entity("StrongholdsUtil.Models.Robot", b =>
                {
                    b.Property<int>("RobotID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RobotID"), 1L, 1);

                    b.Property<float>("Battery")
                        .HasColumnType("real");

                    b.Property<float>("Latitude")
                        .HasColumnType("real");

                    b.Property<int>("LoginID")
                        .HasColumnType("int");

                    b.Property<float>("Longitude")
                        .HasColumnType("real");

                    b.Property<int>("Memory")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Speed")
                        .HasColumnType("real");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("RobotID");

                    b.HasIndex("LoginID");

                    b.ToTable("Robots");
                });

            modelBuilder.Entity("StrongholdsUtil.Models.Station", b =>
                {
                    b.Property<int>("StationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StationID"), 1L, 1);

                    b.Property<int>("LoginID")
                        .HasColumnType("int");

                    b.Property<float>("Oxygen")
                        .HasColumnType("real");

                    b.Property<float>("Power")
                        .HasColumnType("real");

                    b.Property<float>("latitude")
                        .HasColumnType("real");

                    b.Property<float>("longitude")
                        .HasColumnType("real");

                    b.HasKey("StationID");

                    b.HasIndex("LoginID");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("StrongholdsUtil.Models.Mission", b =>
                {
                    b.HasOne("StrongholdsUtil.Models.Robot", "Robot")
                        .WithOne("Mission")
                        .HasForeignKey("StrongholdsUtil.Models.Mission", "RobotID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Robot");
                });

            modelBuilder.Entity("StrongholdsUtil.Models.Objective", b =>
                {
                    b.HasOne("StrongholdsUtil.Models.Mission", "Mission")
                        .WithMany("Objectives")
                        .HasForeignKey("MissionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mission");
                });

            modelBuilder.Entity("StrongholdsUtil.Models.Robot", b =>
                {
                    b.HasOne("StrongholdsUtil.Models.Login", "Login")
                        .WithMany("Robots")
                        .HasForeignKey("LoginID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Login");
                });

            modelBuilder.Entity("StrongholdsUtil.Models.Station", b =>
                {
                    b.HasOne("StrongholdsUtil.Models.Login", "Login")
                        .WithMany("Stations")
                        .HasForeignKey("LoginID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Login");
                });

            modelBuilder.Entity("StrongholdsUtil.Models.Login", b =>
                {
                    b.Navigation("Robots");

                    b.Navigation("Stations");
                });

            modelBuilder.Entity("StrongholdsUtil.Models.Mission", b =>
                {
                    b.Navigation("Objectives");
                });

            modelBuilder.Entity("StrongholdsUtil.Models.Robot", b =>
                {
                    b.Navigation("Mission");
                });
#pragma warning restore 612, 618
        }
    }
}
